{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\roadmap-FrontendWeek6\\\\src\\\\roadmapLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport \"./styles.css\";\nimport Modal from \"./Modal\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ruLocale from 'date-fns/locale/ru';\nimport { AddTask } from \"./addTask\";\nimport { GetRoadmapMonthsNumbers } from \"./roadmap1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactGrigLayout = WidthProvider(RGL);\n_c = ReactGrigLayout;\nconst defaultProps = {\n  isDraggable: false,\n  isResizable: false,\n  items: 50,\n  rowHeight: 30,\n  cols: 50\n};\nconst localeMap = {\n  ru: ruLocale\n};\nconst maskMap = {\n  ru: '__.__.____'\n};\nexport function RoadmapLayout(props) {\n  _s();\n\n  const taskPlaces = [[0, 1.3, 2.6], [3.9, 5.2, 6.5], [7.8, 9, 10.3], [11.6, 12.9, 14.2], [15.5, 16.8, 18], [19.3, 20.6, 21.9], [23.2, 24.5, 25.8], [27, 28.3, 29.6], [30.9, 32.2, 33.5], [34.8, 36, 37.3], [38.6, 39.9, 41.2], [42.5, 43.8, 45], [46.3, 47.6, 48.9]];\n  const [idCounter, setIdCounter] = useState(0);\n  let [x, setX] = useState(0);\n  let [w, setW] = useState(0);\n  const locale = 'ru';\n\n  function getId() {\n    setIdCounter(idCounter + 1);\n    return idCounter.toString();\n  }\n\n  function findDates(a) {\n    if (value1.getDate() <= 10) {\n      setX(x = taskPlaces[a][0]);\n      return x;\n    } else if (value1.getDate() > 10 && value1.getDate() <= 20) {\n      setX(x = taskPlaces[a][1]);\n      return x;\n    } else {\n      setX(x = taskPlaces[a][2]);\n      return x;\n    }\n  }\n\n  function findDatesWidth(a) {\n    if (value1.getDate() <= 10 && value2.getDate() >= 11 && value2.getDate() <= 20) {\n      setW(w = 2.6);\n      return w;\n    } else if (value2.getDate() - value1.getDate() <= 10) {\n      setW(w = 1.3);\n      return w;\n    } else if (value2.getDate() - value1.getDate() > 10 && value2.getDate() - value1.getDate() < 20) {\n      setW(w = 2.6);\n      return w;\n    } else {\n      setW(w = 3.9);\n      return w;\n    }\n  }\n\n  function getX() {\n    const currentMonth = value1.getMonth();\n    const createdMonthsNumbers = GetRoadmapMonthsNumbers();\n    let a = createdMonthsNumbers.indexOf(currentMonth);\n\n    if (currentMonth === createdMonthsNumbers[createdMonthsNumbers.length - 1] && value1.getFullYear() !== new Date().getFullYear()) {\n      return findDates(12);\n    }\n\n    return findDates(a);\n  }\n\n  function getWidth() {\n    const currentMonth1 = value1.getMonth();\n    const currentMonth2 = value2.getMonth();\n    const createdMonthsNumbers = GetRoadmapMonthsNumbers();\n    let a = createdMonthsNumbers.indexOf(currentMonth1);\n    let b = createdMonthsNumbers.indexOf(currentMonth2);\n\n    if (currentMonth2 === 1 && currentMonth1 === 1 || currentMonth2 === 3 && currentMonth1 === 3 || currentMonth2 === 5 && currentMonth1 === 5 || currentMonth2 === 8 && currentMonth1 === 8 || currentMonth2 === 10 && currentMonth1 === 10) {\n      if (value1.getDate() >= 11 && value1.getDate() <= 20 && value2.getDate() >= 21) {\n        setW(w = 2.6);\n        return w;\n      } else if (value2.getDate() - value1.getDate() <= 10) {\n        setW(w = 1.3);\n        return w;\n      } else if (value2.getDate() - value1.getDate() > 10 && value2.getDate() - value1.getDate() <= 20) {\n        setW(w = 2.6);\n        return w;\n      } else {\n        setW(w = 3.9);\n        return w;\n      }\n    }\n\n    if (a === b) {\n      return findDatesWidth(b);\n    }\n  }\n\n  const [value1, setValue1] = React.useState(new Date());\n  const [value2, setValue2] = React.useState(new Date());\n  const [state, setState] = useState([]);\n\n  function addNewItem() {\n    const oldState = state;\n    const newItem = {\n      x: getX(),\n      y: 0,\n      w: getWidth(),\n      h: 1,\n      i: getId(),\n      roadmapName: value\n    };\n    setState(oldState.concat([newItem])); // {props.reciveValue1(value1);}\n    // {props.reciveValue2(value2);}\n  }\n\n  const [modalActive, setModalActive] = useState(false);\n  const [value, setValue] = useState(0);\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  } // const reciveNewTask = (value) => {console.log(\"value received from B\",value)};\n  // <AddTask reciveNewTask={reciveNewTask}/>\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-btn\",\n      onClick: () => setModalActive(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          locale: localeMap[locale],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            mask: maskMap[locale],\n            value: value1,\n            onChange: newValue => {\n              setValue1(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0414\\u0430\\u0442\\u0430 \\u043A\\u043E\\u043D\\u0446\\u0430: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          locale: localeMap[locale],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            mask: maskMap[locale],\n            value: value2,\n            onChange: newValue => {\n              setValue2(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0426\\u0432\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactGrigLayout, {\n      className: \"reactGrigLayout\",\n      ...defaultProps,\n      children: state.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-grid\": item,\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.roadmapName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)\n      }, item.roadmapName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RoadmapLayout, \"QVoMTaWSq0aitL+XdJOnde+SABk=\");\n\n_c2 = RoadmapLayout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGrigLayout\");\n$RefreshReg$(_c2, \"RoadmapLayout\");","map":{"version":3,"sources":["C:/Проекты/roadmap-FrontendWeek6/src/roadmapLayout.js"],"names":["React","useState","RGL","WidthProvider","Modal","TextField","AdapterDateFns","LocalizationProvider","DatePicker","ruLocale","AddTask","GetRoadmapMonthsNumbers","ReactGrigLayout","defaultProps","isDraggable","isResizable","items","rowHeight","cols","localeMap","ru","maskMap","RoadmapLayout","props","taskPlaces","idCounter","setIdCounter","x","setX","w","setW","locale","getId","toString","findDates","a","value1","getDate","findDatesWidth","value2","getX","currentMonth","getMonth","createdMonthsNumbers","indexOf","length","getFullYear","Date","getWidth","currentMonth1","currentMonth2","b","setValue1","setValue2","state","setState","addNewItem","oldState","newItem","y","h","i","roadmapName","value","concat","modalActive","setModalActive","setValue","handleChange","event","target","newValue","params","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport \"./styles.css\";\nimport Modal from \"./Modal\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ruLocale from 'date-fns/locale/ru';\nimport {AddTask} from \"./addTask\";\nimport {GetRoadmapMonthsNumbers} from \"./roadmap1\"\n\nconst ReactGrigLayout = WidthProvider(RGL);\n\nconst defaultProps = {\n    isDraggable: false,\n    isResizable: false,\n    items: 50,\n    rowHeight: 30,\n    cols: 50,\n}\n\nconst localeMap = {\n    ru: ruLocale\n};\n\nconst maskMap = {\n    ru: '__.__.____'\n};\n\nexport function RoadmapLayout(props) {\n    const taskPlaces =[\n        [0, 1.3, 2.6],\n        [3.9, 5.2, 6.5],\n        [7.8, 9, 10.3],\n        [11.6, 12.9, 14.2],\n        [15.5, 16.8, 18],\n        [19.3, 20.6, 21.9],\n        [23.2, 24.5, 25.8],\n        [27, 28.3, 29.6],\n        [30.9, 32.2, 33.5],\n        [34.8, 36, 37.3],\n        [38.6, 39.9, 41.2],\n        [42.5, 43.8, 45],\n        [46.3, 47.6, 48.9]\n    ]\n    const [idCounter, setIdCounter] = useState(0);\n    let [x, setX] = useState(0);\n    let [w, setW] = useState(0);\n    const locale = 'ru';\n\n    function getId(){\n        setIdCounter(idCounter + 1);\n        return idCounter.toString();\n    }\n\n    function findDates(a){\n        if(value1.getDate() <= 10){\n            setX(x = taskPlaces[a][0]);\n            return x;\n        }else if(value1.getDate() > 10 && value1.getDate() <= 20){\n            setX(x = taskPlaces[a][1]);\n            return x;\n        }else {\n            setX(x = taskPlaces[a][2]);\n            return x;\n        }\n    }\n\n    function findDatesWidth(a){\n        if(value1.getDate() <= 10 && value2.getDate() >= 11 && value2.getDate() <= 20){\n            setW(w = 2.6);\n            return w;\n        }else if(value2.getDate() - value1.getDate() <= 10){\n            setW(w = 1.3);\n            return w;\n        }else if(value2.getDate() - value1.getDate() > 10 && value2.getDate() - value1.getDate() < 20){\n            setW(w = 2.6);\n            return w;\n        }else {\n            setW(w = 3.9);\n            return w;\n        }\n    }\n\n    function getX(){\n        const currentMonth = value1.getMonth();\n        const createdMonthsNumbers = GetRoadmapMonthsNumbers();\n        let a = createdMonthsNumbers.indexOf(currentMonth);\n        if(currentMonth === createdMonthsNumbers[createdMonthsNumbers.length - 1] &&\n            value1.getFullYear() !== new Date().getFullYear()){\n            return findDates(12)\n        }\n        return findDates(a);\n    }\n\n    function getWidth(){\n        const currentMonth1 = value1.getMonth();\n        const currentMonth2 = value2.getMonth();\n        const createdMonthsNumbers = GetRoadmapMonthsNumbers();\n        let a = createdMonthsNumbers.indexOf(currentMonth1);\n        let b = createdMonthsNumbers.indexOf(currentMonth2);\n        if ((currentMonth2 === 1 && currentMonth1 === 1) ||\n            (currentMonth2 === 3 && currentMonth1 === 3) ||\n            (currentMonth2 === 5 && currentMonth1 === 5) ||\n            (currentMonth2 === 8 && currentMonth1 === 8) ||\n            (currentMonth2 === 10 && currentMonth1 === 10)){\n            if(value1.getDate() >= 11 && value1.getDate() <= 20 && value2.getDate() >= 21){\n                setW(w = 2.6);\n                return w;\n            }else if(value2.getDate() - value1.getDate() <= 10){\n                setW(w = 1.3);\n                return w;\n            }else if(value2.getDate() - value1.getDate() > 10 && value2.getDate() - value1.getDate() <= 20){\n                setW(w = 2.6);\n                return w;\n            }else {\n                setW(w = 3.9);\n                return w;\n            }\n        }\n        if(a === b){\n            return findDatesWidth(b)\n        }\n    }\n\n    const [value1, setValue1] = React.useState(new Date());\n\n    const [value2, setValue2] = React.useState(new Date());\n\n    const [state, setState] = useState([])\n\n    function addNewItem(){\n        const oldState = state;\n        const newItem = {x: getX(), y: 0, w: getWidth(), h: 1, i: getId(), roadmapName: value};\n        setState(oldState.concat([newItem]));\n        // {props.reciveValue1(value1);}\n        // {props.reciveValue2(value2);}\n    }\n\n    const [modalActive, setModalActive] = useState(false)\n    const [value, setValue] = useState(0);\n    function handleChange(event) {\n        setValue(event.target.value);\n    }\n\n    // const reciveNewTask = (value) => {console.log(\"value received from B\",value)};\n    // <AddTask reciveNewTask={reciveNewTask}/>\n    return(\n        <React.Fragment>\n            <button className=\"open-btn\" onClick={() => setModalActive(true)}>\n                Добавление задачи\n            </button>\n            <Modal active={modalActive} setActive={setModalActive}>\n                <form action=\"\">\n                    <text>Задача</text>\n                    <input value={value} onChange={handleChange}/><br/>\n                    <text>Дата начала: </text>\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n                        <DatePicker\n                            mask={maskMap[locale]}\n                            value={value1}\n                            onChange={(newValue) => {\n                                setValue1(newValue);\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider><br/>\n                    <text>Дата конца: </text>\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n                        <DatePicker\n                            mask={maskMap[locale]}\n                            value={value2}\n                            onChange={(newValue) => {\n                                setValue2(newValue);\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider><br/>\n                    <text>Цвет задачи: </text>\n                </form>\n                <button onClick={addNewItem}>\n                    Add item\n                </button>\n            </Modal>\n                <ReactGrigLayout className=\"reactGrigLayout\" {...defaultProps} >\n                    {state.map(item => (\n                        <div key={item.roadmapName} data-grid={item} className=\"item\">\n                            <span>{item.roadmapName}</span>\n                        </div>\n                    ))}\n                </ReactGrigLayout>\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}