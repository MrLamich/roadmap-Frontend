{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\roadmap-FrontendWeek6\\\\src\\\\addTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ruLocale from 'date-fns/locale/ru';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localeMap = {\n  ru: ruLocale\n};\nconst maskMap = {\n  ru: '__.__.____'\n};\nexport function AddTask(props) {\n  _s();\n\n  const [idCounter, setIdCounter] = useState(0);\n\n  function getId() {\n    setIdCounter(idCounter + 1);\n    return idCounter.toString();\n  }\n\n  const [state, setState] = useState([]);\n\n  function addNewItem() {\n    const oldState = state;\n    const newItem = {\n      x: 1,\n      y: 1,\n      w: 1,\n      h: 1,\n      i: getId(),\n      roadmapName: value\n    };\n    setState(oldState.concat([newItem]));\n    {\n      props.reciveNewTask(state);\n    }\n  }\n\n  const [modalActive, setModalActive] = useState(false);\n  const [value, setValue] = useState(0);\n  const [value1, setValue1] = React.useState(new Date());\n  const [value2, setValue2] = React.useState(null);\n  const locale = 'ru';\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-btn\",\n      onClick: () => setModalActive(true),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          locale: localeMap[locale],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            mask: maskMap[locale],\n            value: value1,\n            onChange: newValue => {\n              setValue1(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0414\\u0430\\u0442\\u0430 \\u043A\\u043E\\u043D\\u0446\\u0430: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          locale: localeMap[locale],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            mask: maskMap[locale],\n            value: value2,\n            onChange: newValue => {\n              setValue2(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"\\u0426\\u0432\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTask, \"fVo44n3uvpJgN5ZURAlg1urBIJQ=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Проекты/roadmap-FrontendWeek6/src/addTask.js"],"names":["React","useState","Modal","TextField","AdapterDateFns","LocalizationProvider","DatePicker","ruLocale","localeMap","ru","maskMap","AddTask","props","idCounter","setIdCounter","getId","toString","state","setState","addNewItem","oldState","newItem","x","y","w","h","i","roadmapName","value","concat","reciveNewTask","modalActive","setModalActive","setValue","value1","setValue1","Date","value2","setValue2","locale","handleChange","event","target","newValue","params"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Modal from \"./Modal\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ruLocale from 'date-fns/locale/ru';\n\nconst localeMap = {\n    ru: ruLocale\n};\n\nconst maskMap = {\n    ru: '__.__.____'\n};\n\nexport function AddTask(props){\n    const [idCounter, setIdCounter] = useState(0);\n    function getId(){\n        setIdCounter(idCounter + 1);\n        return idCounter.toString();\n    }\n\n    const [state, setState] = useState([])\n    function addNewItem(){\n        const oldState = state;\n        const newItem = {x: 1, y: 1, w: 1, h: 1, i: getId(), roadmapName: value};\n        setState(oldState.concat([newItem]));\n        {props.reciveNewTask(state);}\n    }\n    const [modalActive, setModalActive] = useState(false)\n    const [value, setValue] = useState(0);\n    const [value1, setValue1] = React.useState(new Date());\n    const [value2, setValue2] = React.useState(null);\n    const locale = 'ru';\n    function handleChange(event) {\n        setValue(event.target.value);\n    }\n\n    return(\n        <div>\n            <button className=\"open-btn\" onClick={() => setModalActive(true)}>\n                Добавление задачи\n            </button>\n            <Modal active={modalActive} setActive={setModalActive}>\n                <form action=\"\">\n                    <text>Задача</text>\n                    <input value={value} onChange={handleChange}/><br/>\n                    <text>Дата начала: </text>\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n                        <DatePicker\n                            mask={maskMap[locale]}\n                            value={value1}\n                            onChange={(newValue) => {\n                                setValue1(newValue);\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider><br/>\n                    <text>Дата конца: </text>\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n                        <DatePicker\n                            mask={maskMap[locale]}\n                            value={value2}\n                            onChange={(newValue) => {\n                                setValue2(newValue);\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider><br/>\n                    <text>Цвет задачи: </text>\n                </form>\n                <button onClick={addNewItem}>\n                    Add item\n                </button>\n            </Modal>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}